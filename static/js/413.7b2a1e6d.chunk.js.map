{"version":3,"file":"static/js/413.7b2a1e6d.chunk.js","mappings":"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","sources":["components/main/forms/Form.js","components/main/sections/FormSection.js"],"sourcesContent":["import React, { useState, useEffect, Suspense } from \"react\";\r\nimport \"./Form.css\";\r\nimport \"cleave.js/dist/addons/cleave-phone.us\";\r\nimport Cleave from \"cleave.js/react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\n\r\nconst Modal = React.lazy(() => import(\"react-bootstrap/Modal\"));\r\n\r\nconst ContactForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    email: \"\",\r\n    phone_number: \"\",\r\n    message: \"\",\r\n    gclid: \"\",\r\n    ip_address: \"\",\r\n  });\r\n  const [gclid, setGclid] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [validated, setValidated] = useState(false);\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n  const [apiError, setApiError] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  const handleFetchIP = async () => {\r\n    try {\r\n      const ipResponse = await fetch(\"https://api.ipify.org?format=json\");\r\n      const ipData = await ipResponse.json();\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        ip_address: ipData.ip,\r\n      }));\r\n    } catch (error) {\r\n      console.error(\"Error fetching IP:\", error);\r\n      setApiError(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchIP();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    const gclidParam = urlParams.get(\"gclid\");\r\n\r\n    if (gclidParam) {\r\n      setGclid(gclidParam);\r\n    }\r\n  }, []);\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    let isValid = true;\r\n\r\n    if (name === \"phone_number\") {\r\n      isValid = /^\\+?(\\d.*){3,}$/.test(value); // Adjust regex as per your requirement\r\n    } else {\r\n      isValid = /^[a-zA-Z\\s]*$/.test(value);\r\n    }\r\n\r\n    if (isValid || value === \"\") {\r\n      setFormData({\r\n        ...formData,\r\n        [name]: value,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    setValidated(true);\r\n    const form = event.currentTarget;\r\n    event.preventDefault();\r\n\r\n    if (form.checkValidity() === false) {\r\n      event.stopPropagation();\r\n    } else {\r\n      setFormSubmitted(true);\r\n      setTimeout(() => {\r\n        handleShow();\r\n      }, 500);\r\n    }\r\n\r\n    try {\r\n      const ipResponse = await fetch(\"https://api.ipify.org?format=json\");\r\n      const ipData = await ipResponse.json();\r\n      const userIP = ipData.ip;\r\n      setFormData({\r\n        ...formData,\r\n        ip_address: userIP,\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching IP:\", error);\r\n      setApiError(true);\r\n    }\r\n\r\n    try {\r\n      const zappierWebhookProxyURL = `https://hooks.zapier.com/hooks/catch/3796793/38z21pr/`;\r\n      console.log(formData);\r\n      const response = await fetch(zappierWebhookProxyURL, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      if (response.ok) {\r\n        const jsonResponse = await response.json();\r\n        console.log(\"Data sent successfully to the webhook:\", jsonResponse);\r\n      } else {\r\n        console.error(\r\n          \"Failed to send datat to the webhook. Status code:\",\r\n          response.statusText,\r\n        );\r\n        setApiError(true);\r\n      }\r\n      console.log(\"Form data submitted:\", formData);\r\n    } catch (error) {\r\n      console.log(\"Error Posting to Zapier:\", error);\r\n      setApiError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Suspense fallback={<div>Loading...</div>}>\r\n      <Form\r\n        noValidate\r\n        validated={validated}\r\n        className={`row g-3 form-section shadow-sm bg-dark bg-gradient ${\r\n          formSubmitted ? \"fade-out\" : \"\"\r\n        }`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <div className=\"col-md-12 text-center\">\r\n          <h4>Contact Us</h4>\r\n          <h5 id=\"form\">Free Case Evaluation</h5>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <Form.Label htmlFor=\"first_name\" className=\"form-label\">\r\n            First Name\r\n          </Form.Label>\r\n          <Form.Control\r\n            name=\"first_name\"\r\n            type=\"text\"\r\n            required\r\n            onChange={handleInputChange}\r\n            pattern=\"[A-Za-z\\s]*\"\r\n            isInvalid={validated && formData.first_name === \"\"}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please provide a first name.\r\n          </Form.Control.Feedback>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <Form.Label htmlFor=\"last_name\" className=\"form-label\">\r\n            Last Name\r\n          </Form.Label>\r\n          <Form.Control\r\n            name=\"last_name\"\r\n            type=\"text\"\r\n            required\r\n            onChange={handleInputChange}\r\n            pattern=\"[A-Za-z\\s]*\"\r\n            isInvalid={validated && formData.last_name === \"\"}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please proved a last name.\r\n          </Form.Control.Feedback>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <Form.Label htmlFor=\"email\" className=\"form-label\">\r\n            Email\r\n          </Form.Label>\r\n          <Form.Control\r\n            name=\"email\"\r\n            type=\"email\"\r\n            required\r\n            pattern=\"^[a-zA-Z0-9._%+\\-]+@[a-zA-Z0-9_\\-]+[.]+[a-zA-Z0-9\\-.]{2,61}$\"\r\n            onChange={handleInputChange}\r\n            isInvalid={validated && formData.email === \"\"}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please provide an email address.\r\n          </Form.Control.Feedback>\r\n        </div>\r\n        <div className=\"col-md-6\">\r\n          <Form.Label htmlFor=\"phone_number\" className=\"form-label\">\r\n            Phone Number\r\n          </Form.Label>\r\n          <Cleave\r\n            name=\"phone_number\"\r\n            type=\"tel\"\r\n            className=\"form-control\"\r\n            id=\"phone_number\"\r\n            options={{ phone: true, phoneRegionCode: \"US\" }}\r\n            pattern=\"^\\+?( ?[\\(]?[\\-]?[0-9][\\)]?){6,13}$\"\r\n            required\r\n            onChange={handleInputChange}\r\n            isInvalid={validated && formData.phone_number === \"\"}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please provide a phone number.\r\n          </Form.Control.Feedback>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <Form.Label htmlFor=\"message\" className=\"form-label\">\r\n            Tell Us About Your Case\r\n          </Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            name=\"message\"\r\n            style={{ height: \"100px\" }}\r\n            required\r\n            onChange={handleInputChange}\r\n            isInvalid={validated && formData.message === \"\"}\r\n          />\r\n          <Form.Control.Feedback type=\"invalid\">\r\n            Please tell use about your case.\r\n          </Form.Control.Feedback>\r\n        </div>\r\n        <Form.Control\r\n          type=\"hidden\"\r\n          id=\"gclid\"\r\n          name=\"gclid\"\r\n          value={gclid}\r\n          onChange={handleInputChange}\r\n        />\r\n        <div className=\"col-12\">\r\n          <Button type=\"submit\" variant=\"secondary\" disabled={apiError}>\r\n            Submit\r\n          </Button>\r\n\r\n          <Modal show={show} onHide={handleClose} animation={true}>\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Thank you!</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              We appreciate your submission, someone from our team will reach\r\n              out soon!\r\n            </Modal.Body>\r\n            <Modal.Footer className=\"d-flex justify-content-center\">\r\n              <Button variant=\"secondary\" onClick={handleClose}>\r\n                Close\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      </Form>\r\n    </Suspense>\r\n  );\r\n};\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport Form from \"../forms/Form.js\";\r\n\r\nconst FormSection = () => {\r\n  return (\r\n    <section className=\"container d-flex justify-content-center\">\r\n      <Form></Form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default FormSection;\r\n"],"names":["Modal","React","ContactForm","formData","setFormData","useState","first_name","last_name","email","phone_number","message","gclid","ip_address","setGclid","show","setShow","validated","setValidated","formSubmitted","setFormSubmitted","apiError","setApiError","handleClose","useEffect","async","ipResponse","fetch","ipData","json","prevState","ip","error","console","handleFetchIP","gclidParam","URLSearchParams","window","location","search","get","handleInputChange","event","name","value","target","isValid","test","_jsx","Suspense","fallback","children","_jsxs","Form","noValidate","className","concat","onSubmit","form","currentTarget","preventDefault","checkValidity","stopPropagation","setTimeout","userIP","zappierWebhookProxyURL","log","response","method","headers","body","JSON","stringify","ok","jsonResponse","statusText","id","Label","htmlFor","Control","type","required","onChange","pattern","isInvalid","Feedback","Cleave","options","phone","phoneRegionCode","as","style","height","Button","variant","disabled","onHide","animation","Header","closeButton","Title","Body","Footer","onClick","FormSection"],"sourceRoot":""}